@page "/Data/Dispositivi"

@using DataAccessLibrary
@using DataAccessLibrary.Models
@using BlazorTestCRUD.Models
@using Microsoft.AspNetCore.Components.QuickGrid

@inject IDispositivoData _db 

<h1>Pagina Dispositivi</h1>

<h3>Inserisci nuovo dispositivo</h3>

<EditForm Model="@newDispositivo" OnValidSubmit="@InsertDispositivo">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <label>Matricola
        <InputText id="Matricola" @bind-Value="newDispositivo.Matricola" />
    </label><br />
    <label>Descrizione
        <InputText id="Descrizione" @bind-Value="newDispositivo.Descrizione" />
    </label><br />
    <label>Modello
        <InputText id="Modello" @bind-Value="newDispositivo.Modello" />
    </label><br />
    <button type="submit" class="btn btn-primary">Conferma Inserimento</button>
</EditForm>
<br />
<br />
<br />
<h3>Lista dei dispositivi</h3>
@if (dispositivi is null)
{
    <p><em>Caricamento...</em></p>
}
else
{

    <QuickGrid Items="dispositivi.AsQueryable()" class="table table-striped">
        <PropertyColumn Property="d => d.Matricola" Sortable="true" />
        <PropertyColumn Property="d => d.Descrizione" Sortable="true" />
        <PropertyColumn Property="d => d.Modello" Sortable="true" />
       <TemplateColumn Title="Azioni">
            <button @onclick="@(() => DeleteDispositivo(context ))">Elimina</button>
            <button @onclick="@(() => ModificaDispositivo(context))">Modifica</button>
        </TemplateColumn>
        
    </QuickGrid>


    @if (dispositivoDaModificare != null)
    {
        <div>
            <EditForm Model="@dispositivoDaModificare" OnValidSubmit="@UpdateDispositivo">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <label>
                    Matricola
                    <InputText id="Matricola" @bind-Value=@dispositivoDaModificare.Matricola />
                </label><br />
                <label>
                    Descrizione
                    <InputText id="Descrizione" @bind-Value=@dispositivoDaModificare.Descrizione />
                </label><br />
                <label>
                    Modello
                    <InputText id="Modello" @bind-Value=@dispositivoDaModificare.Modello />
                </label><br />

                <button type="submit" class="btn btn-primary">Conferma Modifica</button>

            </EditForm>

        </div>
    }
}

@code {

    private List<DispositivoModel> dispositivi;
    private DispositivoModel newDispositivo = new DispositivoModel();
    private DispositivoModel dispositivoDaModificare;
    //private DisplayDispositivoModel dispositivoModificato = new DisplayDispositivoModel();
    private DisplayDispositivoModel dispositivoModificato;
    string matricolaPk;

    protected override async Task OnInitializedAsync()
    {
        dispositivi = await _db.GetDispositivo();
    }

    private async Task InsertDispositivo()
    {
        await _db.InsertDispositivo(newDispositivo);
        newDispositivo = new DispositivoModel();
        await OnInitializedAsync();
    }

    private async Task DeleteDispositivo(DispositivoModel d)
    {
        await _db.DeleteDispositivo(d);
        await OnInitializedAsync();
    }

    private async Task UpdateDispositivo()
    {
        await _db.UpdateDispositivo(matricolaPk, dispositivoDaModificare);

        dispositivoDaModificare = null; 
        await OnInitializedAsync();
    }

    private async Task ModificaDispositivo(DispositivoModel d)
    {
        dispositivoDaModificare = new DispositivoModel
            {
                Matricola = d.Matricola,
                Descrizione = d.Descrizione,
                Modello = d.Modello
            };
        matricolaPk = d.Matricola;
        await OnInitializedAsync();
    }





}
